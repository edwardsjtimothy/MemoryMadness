{"version":3,"sources":["components/Header/index.js","components/Gamepiece/index.js","components/Gameboard/index.js","App.js","index.js"],"names":["Header","className","Gamepiece","props","onClick","imgClicked","id","alt","src","image","data-id","Gameboard","state","clickedArr","wins","loses","newClick","setState","console","log","arr","this","filter","item","index","indexOf","newLoses","alert","length","newWin","newImgArr","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","shuffle","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e13bd8e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\"\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className=\"jumbotron-back jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                    <h1 className=\"display-4 buffer\">Memory Madness</h1>\r\n                    <p className=\"lead\">Only click on the images once each. If you click on an image twice, the game will restart. Good luck!</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"./gamepiece.css\";\r\n\r\n \r\n\r\nfunction Gamepiece(props) {;\r\n    return (\r\n    <div className=\"gamepiece\"onClick={()=>props.imgClicked(props.id)}>\r\n        <div className=\"img-container\">\r\n            <img className=\"game-img\" alt=\"\" src={props.image} data-id={props.id} />\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Gamepiece;\r\n\r\n","import React, { Component } from 'react'\r\nimport \"./gameboard.css\"\r\nimport Gamepiece from \"../Gamepiece\"\r\nimport image from \"../../images.json\"\r\n\r\nclass Gameboard extends Component {\r\n\r\n    state = {\r\n        clickedArr: [],\r\n        wins: 0,\r\n        loses: 0\r\n    }\r\n\r\n//click function for images\r\n    imgClicked = (id) => {\r\n        let newClick = this.state.clickedArr;\r\n        this.setState({ clickedArr: [...newClick, id] });\r\n        console.log(this.state);\r\n    }\r\n\r\n//checking for victory conditions when state is updated\r\n    componentDidUpdate() {\r\n\r\n        //storing state array in variable\r\n        let newClick = this.state.clickedArr;\r\n\r\n        //function to sort though array and identify any any duplicate ids\r\n        let findDuplicates = arr => arr.filter((item, index) => arr.indexOf(item) !== index)\r\n\r\n        //storing out put of findDuplicates running over newClick into new array \r\n        let dupes = findDuplicates(newClick);\r\n\r\n        // if dupes exists, there is a duplicate and player loses. Loses increments and message displays\r\n        if (dupes[0]) {\r\n            let newLoses = this.state.loses + 1;\r\n            alert(`You Lost! You clicked ${newClick.length - 1} unique photos. Try again!`)\r\n            this.setState({ clickedArr: [], loses: newLoses });\r\n        } else if (newClick.length === 12) {\r\n            let newWin = this.state.wins + 1;\r\n            alert(`You Won! Your memory is bananas.`)\r\n            this.setState({ clickedArr: [], wins: newWin });\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        //function to shuffle photos on click \r\n        function shuffle(array) {\r\n            let currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n            // While there remain elements to shuffle...\r\n            while (0 !== currentIndex) {\r\n\r\n                // Pick a remaining element...\r\n                randomIndex = Math.floor(Math.random() * currentIndex);\r\n                currentIndex -= 1;\r\n\r\n                // And swap it with the current element.\r\n                temporaryValue = array[currentIndex];\r\n                array[currentIndex] = array[randomIndex];\r\n                array[randomIndex] = temporaryValue;\r\n            }\r\n\r\n            return array;\r\n        }\r\n        let newImgArr = shuffle(image);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 center\">\r\n                        <div>\r\n                            <h4>Wins: {this.state.wins} Loses: {this.state.loses}</h4>\r\n                        </div>\r\n                        <div>\r\n                            <Gamepiece id={newImgArr[0].id} image={newImgArr[0].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[1].id} image={newImgArr[1].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[2].id} image={newImgArr[2].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[3].id} image={newImgArr[3].image} imgClicked={this.imgClicked} />\r\n                        </div>\r\n                        <div>\r\n                            <Gamepiece id={newImgArr[4].id} image={newImgArr[4].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[5].id} image={newImgArr[5].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[6].id} image={newImgArr[6].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[7].id} image={newImgArr[7].image} imgClicked={this.imgClicked} />\r\n                        </div>\r\n                        <div>\r\n                            <Gamepiece id={newImgArr[8].id} image={newImgArr[8].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[9].id} image={newImgArr[9].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[10].id} image={newImgArr[10].image} imgClicked={this.imgClicked} />\r\n                            <Gamepiece id={newImgArr[11].id} image={newImgArr[11].image} imgClicked={this.imgClicked} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gameboard;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Gameboard from \"./components/Gameboard\";\nimport \"./App.css\"\n\n\nfunction App() {\n  return (\n\n    <div className=\"background\">\n      <Header />\n      <Gameboard/>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}